<<<<<<< HEAD
Notas del curso
=======
<Notas del curso
>>>>>>> cabecera

ls = lista de archivos
ls -al, ls -l, ls -a = listar mas archivos
rm = remove
mkdir = crear directorio
cd = navegar
.= Actualmente
..= volver
~ = home
cat = ver contenido de un archivos
history = comandos usados
git init = iniciar git
git add = añadir a stagging(memoria ram)
git add . = añadir todos
git commit = aplicar cambios (para salir de la pantalla siguiente esc + shift + z + z)
git commit -m ""= commit mas mensaje
git status
git show = ultimo cambio
git rm --staggedn= se va el stagging y el archivo a la verga, pero quedan los logs
git rm --forced =se va todo a la verga
git config --list
git config --global user.name ""
git config --global user.email ""
git log ----- = cambios realizado
git diff (colocar la clave del commit) (clave del commit a comparar) = para comparalos
git reset (codigo de version a volver) --soft(lo que esta en stagging se queda alli, vease version  es donde se usa el add) o hard (se va todo a la verga)
git checkout (insertar version) (nombre del archivo)= traer el archivo deseado
git checkout (master) (nombre del archivo)= regresar la version original
git reset HEAD = sacar del stagging en el add mas reciente
git commit -am (sirve para hacer commit sin add a archisvos ya trabajados anteriormente)
git branch (nombre de la branch) = crear nueva ramas
git checkout (nombre de la rama) = para navegar entre ramas
git merge (nombre de la rama)

# Primero: Guardar la URL del repositorio de GitHub
# con el nombre de origin
git remote add origin URL

# Segundo: Verificar que la URL se haya guardado
# correctamente:
git remote
git remote -v

# Tercero: Traer la versión del repositorio remoto y
# hacer merge para crear un commit con los archivos
# de ambas partes. Podemos usar git fetch y git merge
# o solo el git pull con el flag --allow-unrelated-histories:
git pull origin master --allow-unrelated-histories

# Por último, ahora sí podemos hacer git push para guardar
# los cambios de nuestro repositorio local en GitHub:
git push origin master

llaves ssh

ssh-keygen -t rsa -b 4096 -C (mi email)

eval &(ssh-agent -s)

ssh-add (y la ruta)


Crear un nuevo tag y asignarlo a un commit:
git tag -a nombre-del-tag id-del-commit.

Borrar un tag en el repositorio local:
git tag -d nombre-del-tag.

Listar los tags de nuestro repositorio local: 
git tag o git show-refs --tags.

Publicar un tag en el repositorio remoto: 
git push origin --tags.

Borrar un tag del repositorio remoto: 
git tag -d nombre-del-tag y git push origin :refs/tags/nombre-del-tag.